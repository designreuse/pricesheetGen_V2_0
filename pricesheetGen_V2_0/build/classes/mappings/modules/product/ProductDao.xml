<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sapling.modules.product.dao.ProductDao">
    
    <resultMap id="productResult" type="Product">
		<id property="uid" column="uid" />
		<result property="product_id" column="productId" />
		<result property="product_name" column="productName" />
		<result property="create_date" column="createDate" />
		<result property="create_by" column="createBy.id" />
		<result property="update_date" column="updateDate" /> 
		<result property="update_by" column="updateBy.id" />
		<collection property="brands" ofType="ProdBrand">
			<id property="id" column="brands.id" />
		</collection>
		<collection property="classfiys" ofType="ProdClassfiy">
			<id property="id" column="classfiys.id" />
		</collection>
		<collection property="models" ofType="ProdModel">
			<id property="id" column="models.id" />
		</collection>
	</resultMap>
	
	<sql id="productColumns">
		a.uid as uid,
		a.product_id as productId,
		a.product_name as productName,
		a.by_name_one as byNameOne,
		a.by_name_two as byNameTwo,
		a.create_by as  "createBy.id",
		b.`name` as "createBy.name",
		a.update_by as "updateBy.id",
		c.`name` as "updateBy.name",
		a.create_date as createDate,
		a.update_date as updateDate
	</sql>

	<select id="get" resultType="Product">
		SELECT 
		    DISTINCT
			<include refid="productColumns"/>
		FROM t_product   a  
		LEFT JOIN sys_user b on a.create_by=b.id
		LEFT JOIN sys_user c on a.update_by=c.id	
		WHERE a.uid = #{id}
	</select>
	
	<select id="getProductByName" resultType="Product">
		SELECT 
		    DISTINCT
			<include refid="productColumns"/>
		FROM t_product   a  
		LEFT JOIN sys_user b on a.create_by=b.id
		LEFT JOIN sys_user c on a.update_by=c.id	
		WHERE a.product_name = #{productName}
	</select>
	
	<select id="findPageList" resultType="Product" >
		SELECT 
		DISTINCT
			<include refid="productColumns"/>
		FROM t_product   a  
		LEFT JOIN sys_user b on a.create_by=b.id
		LEFT JOIN sys_user c on a.update_by=c.id			
		<where>
		     <if test="productName !=null and productName !='' ">
				a.product_name LIKE CONCAT('%',#{productName},'%' ) 
			</if>
		</where>
		 ORDER BY a.update_date
	</select>
	
	
	<select id="findMaxProductId" resultType="string">
		 select max(substring(product_id, 5, 14)) maxBatchId   
 		from t_product 
	</select>

	<insert id="insert">	
		INSERT INTO t_product(
			product_id,
			product_name,
			create_date,
			create_by,
			update_date,
			update_by
		) VALUES (
			#{productId},
			#{productName},
			#{createDate},
			#{createBy.id},
			#{updateDate},
			#{updateBy.id}
		)		
	</insert>
	
	<insert id="insetProdBrand" >	
		INSERT INTO t_prod_brand(
			brand_id,
			product_id
		) VALUES
		<foreach collection="brands" item="brand" index= "index" separator =",">
		    (
		        #{brand.brandId},
		        #{productId}
		    )
	    </foreach>
	</insert>
	
	<insert id="insetProdClassfiy" >	
		INSERT INTO t_prod_classfiy(
			classfiy_id,
			product_id
		) VALUES
		<foreach collection="classfiys" item="classfiy" index= "index" separator =",">
		    (
		        #{classfiy.prodClassfiyId},
		        #{productId}
		    )
	    </foreach>
	</insert>
	
	<insert id="insetProdModel" >	
		INSERT INTO t_prod_model(
			model_id,
			product_id
		) VALUES
		<foreach collection="models" item="model" index= "index" separator =",">
		    (
		        #{model.modelId},
		        #{productId}
		    )
	    </foreach>
	</insert>
	
	<update id="update">
	 	UPDATE t_product SET 
			product_name = #{productName}, 
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE product_id = #{productId}
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM t_product
		WHERE uid = #{uid}
	</update>
	
	<update id="deleteProdClassfiy">
		DELETE FROM t_prod_classfiy
		WHERE product_id = #{productId}
	</update>
	
	<update id="deleteProdBrand">
		DELETE FROM t_prod_brand
		WHERE product_id = #{productId}
	</update>
	
	<update id="deleteProdModel">
		DELETE FROM t_prod_model
		WHERE product_id = #{productId}
	</update>
</mapper>